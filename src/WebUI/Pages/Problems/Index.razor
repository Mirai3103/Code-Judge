@page "/Problems"
@using MediatR
@using Code_Judge.Application.Problems.Queries.GetProblemsWithPagination
@using Code_Judge.Application.Common.Models
@using Code_Judge.Domain.Enums
<div class="overflow-x-auto">
  <table class="table ">
    <!-- head -->
    <thead>
      <tr>
          <th>
              Id
          </th>
          <th>
              Title
          </th>
          <th>
              Difficulty
          </th>
          <th>
              Points
          </th>
          <th>
              Created On
          </th>
      </tr>
    </thead>
    <tbody>
     @if(Problems != null)
     {
         @foreach(var problem in Problems.Items)
         {
             <tr class="cursor-pointer hover:bg-base-200" onclick="@(() => NavigationManager.NavigateTo($"/Problems/{problem.Slug}"))">
                 <td>
                     @problem.Id
                 </td>
                 <td>
                     @problem.Name
                 </td>
                 <td>
                     @problem.DifficultyLevel.ToFriendlyString()
                 </td>
                 <td>
                     @problem.Points
                 </td>
                 <td>
                     @problem.Created
                 </td>
             </tr>
         }
     }
    </tbody>
  </table>
</div>

@code {
    [Inject] IMediator Mediator { get; set; } = null!;
    [Inject] NavigationManager NavigationManager { get; set; } = null!;
    private int CurrentPage { get; set; } = 1;
    private PaginatedList<ProblemBriefDto>? Problems { get; set; } = null;
    protected override async Task OnInitializedAsync()
    {
        var command = new GetProblemsWithPaginationQuery()
        {
            PageNumber = CurrentPage,
            PageSize = 24
        };
        var result = await Mediator.Send(command);
        Problems = result;
    }

}