@page "/fetchdata"
@using Code_Judge.Application.Common.Models
@using Code_Judge.Application.Problems.Queries.GetProblemsWithPagination
@using MediatR
@inject IMediator Mediator

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (_problems == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in _problems.Items)
            {
                <tr>
                    <td>@p.Slug</td>
                    <td>@p.CreatedBy</td>
                    <td>@p.Name</td>
                    <td>@p.DifficultyLevel</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private PaginatedList<ProblemBriefDto>? _problems = null;
    protected override async Task OnInitializedAsync()
    {
        _problems = await Mediator.Send(new GetProblemsWithPaginationQuery()
        {
            PageNumber = 1,
            PageSize =  10
        });
    }
}
